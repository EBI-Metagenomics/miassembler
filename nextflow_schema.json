{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/ebi-metagenomics/miassembler/master/nextflow_schema.json",
    "title": "ebi-metagenomics/miassembler pipeline parameters",
    "description": "Microbiome Informatics metagenomes assembly pipeline",
    "type": "object",
    "defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "oneOf": [
                {
                    "description": "Required fields when samplesheet is not provided.",
                    "required": [
                      "study_accession",
                      "reads_accession",
                      "blast_reference_genomes_folder",
                      "bwamem2_reference_genomes_folder",
                      "outdir",
                      "human_phix_blast_index_name",
                      "human_phix_bwamem2_index_name"
                    ]
                },
                {
                    "description": "Required fields when samplesheet is provided.",
                    "required": [
                      "samplesheet",
                      "blast_reference_genomes_folder",
                      "bwamem2_reference_genomes_folder"
                  ]
                }
            ],
            "properties": {
                "study_accession": {
                    "type": "string",
                    "fa_icon": "fas fa-address-card",
                    "description": "The ENA Study secondary accession"
                },
                "reads_accession": {
                    "type": "string",
                    "description": "The ENA Run primary accession",
                    "fa_icon": "far fa-address-card"
                },
                "private_study": {
                    "type": "boolean",
                    "description": "To use if the ENA study is private"
                },
                "samplesheet": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "schema": "assets/schema_input.json",
                    "description": "Path to comma-separated file containing information about the raw reads with the prefix to be used.",
                    "help_text": "You will need to create a design file with information about the raw reads running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "assembler": {
                    "type": "string",
                    "enum": ["spades", "metaspades", "megahit"],
                    "description": "The short reads assembler"
                },
                "single_end": {
                    "type": "boolean",
                    "description": "Force the single_end value for the study / reads"
                },
                "library_strategy": {
                    "type": "string",
                    "description": "Force the library_strategy value for the study / reads",
                    "enum": ["metagenomic", "metatranscriptomic", "genomic", "transcriptomic", "other"]
                },
                "library_layout": {
                    "type": "string",
                    "description": "Force the library_layout value for the study / reads",
                    "enum": ["single", "paired"]
                },
                "spades_version": {
                    "type": "string",
                    "default": "3.15.5"
                },
                "megahit_version": {
                    "type": "string",
                    "default": "1.2.9"
                },
                "reference_genome": {
                    "type": "string",
                    "description": "The genome to be used to clean the assembly, the genome will be taken from the Microbiome Informatics internal directory",
                    "enum": [
                        "chicken.fna",
                        "salmon.fna",
                        "cod.fna",
                        "pig.fna",
                        "cow.fna",
                        "mouse.fna",
                        "honeybee.fna",
                        "rainbow_trout.fna",
                        "rat.fna",
                        "sheep.fna",
                        "soybean.fna",
                        "zebrafish.fna"
                    ]
                },
                "blast_reference_genomes_folder": {
                    "type": "string",
                    "description": "The folder with the reference genome blast indexes, defaults to the Microbiome Informatics internal directory.",
                    "format": "directory-path"
                },
                "bwamem2_reference_genomes_folder": {
                    "type": "string",
                    "description": "The folder with the reference genome bwa-mem2 indexes, defaults to the Microbiome Informatics internal directory.",
                    "format": "directory-path"
                },
                "remove_human_phix": {
                    "type": "boolean",
                    "description": "Remove human and phiX reads pre assembly, and contigs matching those genomes.",
                    "default": true
                },
                "human_phix_blast_index_name": {
                    "type": "string",
                    "description": "Combined Human and phiX BLAST db.",
                    "default": "human_phix"
                },
                "human_phix_bwamem2_index_name": {
                    "type": "string",
                    "description": "Combined Human and phiX bwa-mem2 index.",
                    "default": "human_phix"
                },
                "min_contig_length": {
                    "type": "integer",
                    "default": 500,
                    "description": "Minimum contig length filter."
                },
                "min_contig_length_metatranscriptomics": {
                    "type": "integer",
                    "default": 200,
                    "description": "Minimum contig length filter for metaT."
                },
                "assembly_memory": {
                    "type": "integer",
                    "default": 100,
                    "description": "Default memory allocated for the assembly process."
                },
                "spades_only_assembler": {
                    "type": "boolean",
                    "description": "Run SPAdes/metaSPAdes without the error correction step.",
                    "default": true
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open",
                    "default": "results"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 32,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "1.TB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "168.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/defs/input_output_options"
        },
        {
            "$ref": "#/defs/max_job_request_options"
        },
        {
            "$ref": "#/defs/generic_options"
        }
    ]
}
