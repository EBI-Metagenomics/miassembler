nextflow_pipeline {

    name "Test Workflow EBIMETAGENOMICS_MIASSEMBLER"
    script "main.nf"

    test("Samplesheet spades") {

        when {
            params {
                outdir = "tests/results"
                assembler = "spades"
                bwamem2_reference_genomes_folder = "${projectDir}/tests/human_phix/bwa2mem"
                blast_reference_genomes_folder   = "${projectDir}/tests/human_phix/blast"
                samplesheet                      = "${projectDir}/tests/samplesheet/test.csv"
            }
        }

        then {
            with(workflow) {
                assert success
                assert trace.succeeded().count{ task -> task.name.contains("SPADES") } == 1
                assert trace.succeeded().count{ task -> task.name.contains("MEGAHIT") } == 1
            }
        }

    }

    test("metaSPAdes - paired end") {

        when {

            params {
                outdir = "tests/results"
                bwamem2_reference_genomes_folder = "${projectDir}/tests/human_phix/bwa2mem"
                blast_reference_genomes_folder   = "${projectDir}/tests/human_phix/blast"
                study_accession                  = "SRP115494"
                reads_accession                  = "SRR6180434"
            }
        }

        then {
            with (workflow) {
                assert success
                assert trace.succeeded().count{ task -> task.name.contains("SPADES") } == 1
                assert trace.succeeded().count{ task -> task.name.contains("MEGAHIT") } == 0
                assert trace.succeeded().size() == 16
            }
        }

    }

    test("MEGAHIT - paired end") {

        when {
            params {
                outdir                           = "tests/results"
                assembler                        = "megahit"
                study_accession                  = "SRP115494"
                reads_accession                  = "SRR6180434"
                bwamem2_reference_genomes_folder = "${projectDir}/tests/human_phix/bwa2mem"
                blast_reference_genomes_folder   = "${projectDir}/tests/human_phix/blast"
            }
        }

        then {
            with(workflow) {
                assert success
                assert trace.succeeded().count{ task -> task.name.contains("SPADES") } == 0
                assert trace.succeeded().count{ task -> task.name.contains("MEGAHIT") } == 1
                assert trace.tasks().size() == 16
            }
        }

    }

    test("metaSPAdes - single end - should fail") {

        when {
            params {
                outdir                           = "tests/results"
                assembler                        = "metaspades"
                bwamem2_reference_genomes_folder = "${projectDir}/tests/human_phix/bwa2mem"
                blast_reference_genomes_folder   = "${projectDir}/tests/human_phix/blast"
                study_accession                  = "ERP012810"
                reads_accession                  = "ERR1076564"
            }
        }

        then {
            with(workflow) {
                // No contigs
                assert !success
                assert trace.failed().count{ task -> task.name.contains("SPADES") } == 1
            }
        }

    }

    test("MEGAHIT - single end - should fail") {

        when {
            params {
                outdir = "tests/results"
                bwamem2_reference_genomes_folder = "${projectDir}/tests/human_phix/bwa2mem"
                blast_reference_genomes_folder   = "${projectDir}/tests/human_phix/blast"
                study_accession                  = "ERP012810"
                reads_accession                  = "ERR1076564"
            }
        }

        then {
            with(workflow) {
                assert !success
                assert trace.failed().count{ task -> task.name.contains("MEGAHIT") } == 1
            }
        }
    }

    test("MEGAHIT - metaT - single end") {

        when {
            params {
                outdir = "tests/results"
                bwamem2_reference_genomes_folder = "${projectDir}/tests/human_phix/bwa2mem"
                blast_reference_genomes_folder   = "${projectDir}/tests/human_phix/blast"
                study_accession                  = "DRP007622"
                reads_accession                  = "DRR280712"
            }
        }

        then {
            with(workflow) {
                assert success
                assert trace.succeeded().count{ task -> task.name.contains("SPADES") } == 0
                assert trace.succeeded().count{ task -> task.name.contains("MEGAHIT") } == 1
                assert trace.tasks().size() == 16
            }
        }

    }

    test("Spades - metaT - single end should fail") {

        when {
            params {
                outdir = "tests/results"
                assembler = "spades"
                bwamem2_reference_genomes_folder = "${projectDir}/tests/human_phix/bwa2mem"
                blast_reference_genomes_folder   = "${projectDir}/tests/human_phix/blast"
                study_accession                  = "DRP007622"
                reads_accession                  = "DRR280712"
            }
        }

        then {
            with(workflow) {
                assert !success
                assert trace.failed().count{ task -> task.name.contains("SPADES") } == 1
            }
        }

    }
}
